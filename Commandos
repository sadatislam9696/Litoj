/***   Bismillahir Rahmanir Rahim   ***/

#include<bits/stdc++.h>
using namespace std;

#define     nn          '\n'
#define     ss          second
#define     ff          first
#define     sp(d, n)    fixed << setprecision(d) << n
#define     srt(v)      sort(v.begin(),v.end());
#define     rsrt(v)     sort(v.rbegin(),v.rend());
#define     rev(v)      reverse(v.begin(),v.end());
#define     mem(a, x)   memset(a, x, sizeof a)

using ll =  long long;
using ld =  long double;
using ull = unsigned long long;
const ld pi = acos(-1.0);
template <typename T>
using minHeap = priority_queue<T, vector<T>, greater<T>>;

int dx[6] = {0, 1, -1, 0, 0};
int dy[6] = {0, 0, 0, 1, -1};

const int M = 1e9;
const int N = 105;

vector<int>adj[N];
int n, m;

vector<int> bfs(int s){
  vector<int>d(n, M);
  queue<int>q;
  q.push(s);
  d[s] = 0;
  while(!q.empty()){
     int u = q.front();
     q.pop();

     for(auto v : adj[u]){
       if((d[u] + 1) < d[v]){
         d[v] = d[u] + 1;
         q.push(v);
       }
     }
  }
 return d;
}
void solution(){
   cin >> n >> m; 

   while(m--){
     int u, v;
     cin >> u >> v; 
     adj[u].push_back(v);
     adj[v].push_back(u);
   }

   int s, e;
   cin >> s >> e; 
   
   auto ds = bfs(s);
   auto de = bfs(e);

   int ans = 0;
   for(int i = 0; i < n; i++){
     ans = max(ans, ds[i] + de[i]);
   }
   
   cout << ans << nn;
   for(int i = 0; i < n; i++){
     adj[i].clear();
   }
}

int32_t main(){
   
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);

    int t = 1, c = 1;
    cin >> t;
    //cin.ignore();
    while(t--){
        cout << "Case " << c++ << ": ";
        solution();
    }
    return 0;
}
