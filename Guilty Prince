/***   Bismillahir Rahmanir Rahim   ***/

#include<bits/stdc++.h>
using namespace std;

#define     nn          '\n'
#define     ss          second
#define     ff          first
#define     sp(d, n)    fixed << setprecision(d) << n
#define     srt(v)      sort(v.begin(),v.end());
#define     rsrt(v)     sort(v.rbegin(),v.rend());
#define     rev(v)      reverse(v.begin(),v.end());
#define     mem(a, x)   memset(a, x, sizeof a)

using ll =  long long;
using ld =  long double;
using ull = unsigned long long;
const ld pi = acos(-1.0);
template <typename T>
using minHeap = priority_queue<T, vector<T>, greater<T>>;

int dx[6] = {0, 1, -1, 0, 0};
int dy[6] = {0, 0, 0, 1, -1};

const int M = 1e9 + 7;
const int N = 25;

char a[N][N];
bool vis[N][N];
int ans, n, m;

bool valid(int i, int j){
   return i >= 0 and i < m and j >= 0 and j < n;
}
void dfs(int i, int j){
   vis[i][j] = 1;
   ans++;
   for(int k = 0; k < 5; k++){
     int di = i + dx[k];
     int dj = j + dy[k];
     if(valid(di, dj) and !vis[di][dj] and a[di][dj] == '.'){
       dfs(di, dj);
     }
   }
}
void solution(){
     cin >> n >> m; 
     int x, y; 

     for(int i = 0; i < m; i++){
       for(int j = 0; j < n; j++){
         cin >> a[i][j];
         if(a[i][j] == '@'){
           x = i; y = j;
         }
       }
     }
     
     //cout << x << ' ' << y << nn;

     ans = 0;
     dfs(x, y);

     cout << ans << nn;

     for(int i = 0; i < m; i++){
       for(int j = 0; j < n; j++){
         vis[i][j] = 0;
       }
     }
}

int32_t main(){
   
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);

    int t = 1, c = 1;
    cin >> t;
    //cin.ignore();
    while(t--){
        cout << "Case " << c++ << ": ";
        solution();
    }
    return 0;
}
